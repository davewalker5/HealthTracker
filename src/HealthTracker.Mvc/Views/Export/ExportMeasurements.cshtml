@using HealthTracker.Mvc.Entities
@using Microsoft.AspNetCore.Mvc.ModelBinding
@model HealthTracker.Mvc.Models.ExportMeasurementsViewModel

@{
    ViewData["Title"] = "Export Measurements";
}

<p class="text-center font-weight-bold">
    <span style="font-size: 1.2rem">
        Export Measurements
    </span>
    <br />
    <small class="text-muted">
        <em>
            Export measurements
        </em>
    </small>
    <hr/>
</p>


@if (!string.IsNullOrEmpty(Model.Message))
{
    <div class="row">
        <div class="col-md-12 message">
            <span>@Html.Raw(Model.Message)</span>
        </div>
    </div>
    <hr />
}

@using (Html.BeginForm("ExportMeasurements", "Export", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.PersonId)
    @Html.HiddenFor(m => m.From)
    @Html.HiddenFor(m => m.To)
    @Html.HiddenFor(m => m.DataExchangeType)

    <div class="container-fluid">
        <div class="row">
            <div class="col">
                <strong>@Html.LabelFor(m => m.PersonName)</strong>
            </div>
            <div class="col">
                <div class="input-group">
                    @Html.TextBoxFor(m => m.PersonName, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>
        </div>
        <br/>
        <div class="row">
            <div class="col">
                <strong>@Html.LabelFor(m => m.From)</strong>
            </div>
            <div class="col">
                <div class="input-group">
                    @Html.TextBoxFor(m => m.From, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>
        </div>
        <br/>
        <div class="row">
            <div class="col">
                <strong>@Html.LabelFor(m => m.To)</strong>
            </div>
            <div class="col">
                <div class="input-group">
                    @Html.TextBoxFor(m => m.To, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>
        </div>
        <br/>
        <div class="row">
            <div class="col">
                <strong>@Html.LabelFor(m => m.DataExchangeType)</strong>
            </div>
            <div class="col">
                <div class="input-group">
                    @Html.TextBoxFor(m => m.DataExchangeTypeName, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>
        </div>
        <br/>
        <div class="row">
            <div class="col">
                <strong>@Html.LabelFor(m => m.FileName)</strong>
            </div>
            <div class="col">
                <div class="input-group">
                    @Html.TextBoxFor(m => m.FileName, new { @class = "form-control" })
                </div>
                <span>@Html.ValidationMessageFor(m => m.FileName, "", new { @class = "text-danger" })</span>
            </div>
        </div>
        <hr />
        <p class="text-right">
            <button type="submit" name="Action" value="@ControllerActions.ActionCancel" class="btn btn-secondary">@Model.BackButtonLabel</button>
            <button type="submit" name="Action" id="Export" value="@ControllerActions.ActionExport" class="btn btn-primary">Export</button>
        </p>
    </div>
}

<script type="text/javascript">
    $(document).ready(function() {
        $(document).on("keydown", function (e) {
            if (e.key === "Enter") {
                e.preventDefault();
                $('#Export').click();
            }
        });
    });
</script>