@using HealthTracker.Mvc.Entities
@model HealthTracker.Mvc.Models.MealConsumptionViewModel

@Html.HiddenFor(m => m.PersonName)
@Html.HiddenFor(m => m.From)
@Html.HiddenFor(m => m.To)
@Html.HiddenFor(m => m.Measurement.Id)
@Html.HiddenFor(m => m.Measurement.MealId)
@Html.HiddenFor(m => m.Measurement.NutritionalValueId)
@Html.HiddenFor(m => m.Measurement.PersonId)

<div class="container-fluid">
    <div class="row">
        <div class="col">
            <strong>@Html.Label("Name")</strong>
        </div>
        <div class="col">
            <div class="input-group">
                @Html.TextBoxFor(m => m.PersonName, new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>
    </div>
    <br/>
    <div class="row">
        <div class="col">
            <strong>@Html.LabelFor(m => m.Measurement.Meal.FoodSourceId)</strong>
        </div>
        <div class="col">
            <div class="input-group">
                @Html.DropDownListFor(m => m.Measurement.Meal.FoodSourceId, Model.Sources, new { @class = "form-control" })
            </div>
            <span>@Html.ValidationMessageFor(m => m.Measurement.Meal.FoodSourceId, "", new { @class = "text-danger" })</span>
        </div>
    </div>
    <br/>
    <div id="MealsList">
    </div>
    @await Html.PartialAsync("_DateAndTime", Model) 
    <div class="row">
        <div class="col">
            <strong>@Html.LabelFor(m => m.Measurement.Quantity)</strong>
        </div>
        <div class="col">
            <div class="input-group">
                @Html.TextBoxFor(m => m.Measurement.Quantity, new { @class = "form-control" })
            </div>
            <span>@Html.ValidationMessageFor(m => m.Measurement.Quantity, "", new { @class = "text-danger" })</span>
        </div>
    </div>
</div>

<script type="text/javascript">
    function LoadMealsForFoodSource() {
        var foodSourceId = $("#Measurement_Meal_FoodSourceId").val();
        if (foodSourceId > 0) {
            var route = "/MealConsumption/Meals?foodSourceId=" + foodSourceId;
            $('html, body').css("cursor", "wait");
            $.ajax({
                url: route,
                method: "GET",
                dataType: "html",
                cache: false,
                success: function (result) {
                    // Update the meals drop-down
                    $("#MealsList").html(result);

                    // Select the current meal, if it's in the list
                    var mealId = $("#Measurement_MealId").val();
                    if (mealId > 0) {
                        $('#MealsList option[value="' + mealId + '"]').attr("selected", "selected");
                    }

                    $('html, body').css("cursor", "auto");
                },
                error: function (xhr, status, error) {
                    var errorMessage = xhr.status + ': ' + xhr.statusText;
                    $("#MealsList").html(errorMessage);
                    $('html, body').css("cursor", "auto");
                }
            });
        } else {
            $("#MealsList").html("");
        }
    }

    $(document).ready(function () {
        // If the page is loaded with a meal and food source selected, make sure
        // the associated meals are loaded and the current one is selected
        LoadMealsForFoodSource();

        // When the food source drop-down is changed, update the meals list
        $("#Measurement_Meal_FoodSourceId").change(function () {
            LoadMealsForFoodSource();
        });

        $(document).on("keydown", function (e) {
            if (e.key === "Enter") {
                e.preventDefault();
                $('#Save').click();
            }
        });
    });
</script>