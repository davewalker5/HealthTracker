@using HealthTracker.Mvc.Entities
@model HealthTracker.Mvc.Models.FiltersViewModel

<div class="container-fluid">
    <div class="row">
        <div class="col">
            <strong>@Html.LabelFor(m => m.PersonId)</strong>
            <div class="input-group">
                @Html.DropDownListFor(m => m.PersonId, Model.People, new { @class = "form-control" })
            </div>
            <span>@Html.ValidationMessageFor(m => m.PersonId, "", new { @class = "text-danger" })</span>
        </div>
        <div class="col">
            <strong>@Html.LabelFor(m => m.From)</strong>
            <div class="input-group">
                @Html.TextBoxFor(m => m.From, null, new { @class = "form-control" })
                <script type="text/javascript">
                    new GijgoDatePicker(document.getElementById("Filters_From"), {
                        calendarWeeks: false,
                        uiLibrary: "bootstrap4",
                        format: "@DateFormats.DateJavascript",
                        value: "@Model.From.ToString(DateFormats.Date)"
                    });
                </script>
            </div>
            <span>@Html.ValidationMessageFor(m => m.From, "", new { @class = "text-danger" })</span>
        </div>
        <div class="col">
            <strong>@Html.LabelFor(m => m.To)</strong>
            <div class="input-group">
                @Html.TextBoxFor(m => m.To, null, new { @class = "form-control" })
                <script type="text/javascript">
                    new GijgoDatePicker(document.getElementById("Filters_To"), {
                        calendarWeeks: false,
                        uiLibrary: "bootstrap4",
                        format: "@DateFormats.DateJavascript",
                        value: "@Model.To.ToString(DateFormats.Date)"
                    });
                </script>
            </div>
            <span>@Html.ValidationMessageFor(m => m.To, "", new { @class = "text-danger" })</span>
        </div>
        <div class="col">
            <strong><label>&nbsp;</label></strong>
            <div class="input-group">
                <button type="submit" name="Action" id="Search" value="@ControllerActions.ActionSearch" class="btn btn-primary" style="margin-right: 10px">Search</button>
                @if (Model.ShowAddButton)
                {
                    <button type="submit" name="Action" value="@ControllerActions.ActionAdd" class="btn btn-primary" style="margin-right: 10px">Add</button>
                }
                @if (Model.ShowExportButton)
                {
                    <button type="submit" name="Action" value="@ControllerActions.ActionExport" class="btn btn-primary" style="margin-right: 10px">Export</button>
                }
                @if (Model.ShowPurgeButton)
                {
                    <input type="button" class="btn btn-danger" value="Purge" onclick="javascript:submitPurge()" />
                }
            </div>
        </div>
    </div>
    <br/>
</div>

<script type="text/javascript">
    function submitPurge() {
        $.confirm({
            text: "Are you sure?",
            confirm: function(button) {
                // For the purge button to work, the page must have a "purge-form" that POSTs to an action method to
                // purge data
                $("#purge-form #personId").val($("#PersonId").val());
                $("#purge-form").submit()
            },
            cancel: function(button) {
            },
            confirmButton: "Yes",
            cancelButton: "No"
        });
    }

    $(document).ready(function() {
        $(document).on("keydown", function (e) {
            if (e.key === "Enter") {
                e.preventDefault();
                $('#Search').click();
            }
        });
    });
</script>
